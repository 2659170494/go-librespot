package main

import (
	"encoding/base64"
	"github.com/devgianlu/go-librespot/proto/spotify/connectstate"
	"google.golang.org/protobuf/encoding/prototext"
	"google.golang.org/protobuf/proto"
)

func main() {
	data, _ := base64.StdEncoding.DecodeString("")

	var req connectstate.PutStateRequest
	proto.Unmarshal(data, &req)

	println(prototext.MarshalOptions{Multiline: true}.Format(&req))

}
